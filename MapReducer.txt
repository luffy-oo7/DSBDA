import re  # regular expression
def mapper(line):  # Mapper function that takes a line of text as input
    words = re.findall(r'\w+', line.lower()) 
    return words  
def reducer(filename):  
    total_word_counts = {}  # Dictionary to store the total word counts across the entire file
    with open(filename, 'r') as file: 
        lines = file.readlines()  # Read all lines from file
    for line_number, line in enumerate(lines, 1): 
        words = mapper(line)  # Pass the line to the mapper function to extract words
        word_counts = {}  # Temporary dictionary to store word counts for the current line
        for word in words:  # Loop through each word in the list of words extracted from the line
            word_counts[word] = word_counts.get(word, 0) + 1  # Update the word count for the current line
            total_word_counts[word] = total_word_counts.get(word, 0) + 1  # Update the total word count across all lines
        # Print the word counts for the current line (line number and each word count)
        print(f"line {line_number}", end=" ")  
        for word, count in word_counts.items(): 
            print(f"{word} {count}", end=" ")  
        print() 
    #print the total word counts across the entire file
    print("Total word counts across the entire file:")
    for word, count in total_word_counts.items():
        print(f"{word} {count}")  # Print each word and its total count
if __name__ == "__main__":  
    filename = "input.txt"  
    reducer(filename) 
