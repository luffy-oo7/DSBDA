import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

df = pd.read_excel("/content/AirQualityUCI.xlsx")

df.isnull().sum()

df.dropna()

df1 = df.loc[100:500, ['CO(GT)', 'PT08.S1(CO)', 'NOx(GT)', 'T']]
df2 = df.iloc[[10, 20, 30, 40, 50, 60, 70, 80, 90]]

df_integrated = pd.concat([df1, df2])

df_transposed = df_integrated.transpose()

# Prepare data for modeling
X = df[['PT08.S1(CO)']]  # Sensor reading for CO
y = df[['CO(GT)']]       # True CO concentration

# Split data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Build model
model = LinearRegression()
model.fit(X_train, y_train)

# Evaluate
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
print(f"\nModel MSE: {mse:.2f}")

# 1. Error Correcting (Fix bad values)
# Replace negative numbers with 0
data[data < 0] = 0

# 2. Data Transformation (Make numbers easier to work with)
# Simple scaling: divide all numbers by their maximum value
scaled_data = data / data.max()
# Show first 5 rows of cleaned & transformed data
print(scaled_data.head())
