import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load the dataset
df = pd.read_csv("heart.csv")

# Basic info
print("="*50)
print("Dataset Information")
print("="*50)
df.info()
print("\nFirst 5 rows:")
print(df.head())

# Target distribution
print("\n" + "="*50)
print("Target Variable Distribution")
print("="*50)
target_counts = df['target'].value_counts()
print(target_counts)

plt.figure(figsize=(8,6))
sns.countplot(x='target', data=df, palette="bwr")
plt.title('Distribution of Heart Disease', fontsize=16)
plt.xlabel('Heart Disease (0 = No, 1 = Yes)', fontsize=14)
plt.ylabel('Count', fontsize=14)
plt.xticks(fontsize=12)
plt.show()

# Percentage calculations
total = len(df)
no_disease = target_counts[0]
has_disease = target_counts[1]

print(f"\nPercentage without Heart Disease: {no_disease/total*100:.2f}%")
print(f"Percentage with Heart Disease: {has_disease/total*100:.2f}%")

# Gender distribution
print("\n" + "="*50)
print("Gender Distribution")
print("="*50)
plt.figure(figsize=(8,6))
sns.countplot(x='sex', data=df, palette="mako_r")
plt.title('Gender Distribution', fontsize=16)
plt.xlabel('Sex (0 = Female, 1 = Male)', fontsize=14)
plt.ylabel('Count', fontsize=14)
plt.xticks(fontsize=12)
plt.show()

gender_counts = df['sex'].value_counts()
print(f"\nPercentage of Female Patients: {gender_counts[0]/total*100:.2f}%")
print(f"Percentage of Male Patients: {gender_counts[1]/total*100:.2f}%")

# Grouped statistics
print("\n" + "="*50)
print("Mean Values by Heart Disease Status")
print("="*50)
print(df.groupby("target").mean())

# Age distribution
print("\n" + "="*50)
print("Heart Disease by Age")
print("="*50)
plt.figure(figsize=(20,6))
pd.crosstab(df['age'], df['target']).plot(kind='bar', figsize=(20,6))
plt.title('Heart Disease Frequency by Age', fontsize=16)
plt.xlabel('Age', fontsize=14)
plt.ylabel('Frequency', fontsize=14)
plt.legend(['No Disease', 'Has Disease'], fontsize=12)
plt.show()

# Gender vs Disease
print("\n" + "="*50)
print("Heart Disease by Gender")
print("="*50)
plt.figure(figsize=(10,6))
pd.crosstab(df['sex'], df['target']).plot(kind='bar', color=['#1CA53B','#AA1111'])
plt.title('Heart Disease Frequency by Gender', fontsize=16)
plt.xlabel('Sex (0 = Female, 1 = Male)', fontsize=14)
plt.ylabel('Frequency', fontsize=14)
plt.xticks(rotation=0, fontsize=12)
plt.legend(["No Disease", "Has Disease"], fontsize=12)
plt.show()

# Age vs Max Heart Rate
print("\n" + "="*50)
print("Age vs Maximum Heart Rate")
print("="*50)
plt.figure(figsize=(10,6))
plt.scatter(x=df.age[df.target==1], y=df.thalach[df.target==1], c="red", alpha=0.5, label='Disease')
plt.scatter(x=df.age[df.target==0], y=df.thalach[df.target==0], c="blue", alpha=0.5, label='No Disease')
plt.title('Age vs Maximum Heart Rate', fontsize=16)
plt.xlabel('Age', fontsize=14)
plt.ylabel('Maximum Heart Rate', fontsize=14)
plt.legend(fontsize=12)
plt.grid(True)
plt.show()

# ST Slope analysis
print("\n" + "="*50)
print("Heart Disease by ST Slope")
print("="*50)
plt.figure(figsize=(10,6))
pd.crosstab(df['slope'], df['target']).plot(kind='bar', color=['#DAF7A6','#FF5733'])
plt.title('Heart Disease Frequency by ST Slope', fontsize=16)
plt.xlabel('Slope of Peak Exercise ST Segment', fontsize=14)
plt.ylabel('Frequency', fontsize=14)
plt.xticks(rotation=0, fontsize=12)
plt.legend(["No Disease", "Has Disease"], fontsize=12)
plt.show()

# Fasting Blood Sugar analysis
print("\n" + "="*50)
print("Heart Disease by Fasting Blood Sugar")
print("="*50)
plt.figure(figsize=(10,6))
pd.crosstab(df['fbs'], df['target']).plot(kind='bar', color=['#FFC300','#581845'])
plt.title('Heart Disease by Fasting Blood Sugar (>120 mg/dl)', fontsize=16)
plt.xlabel('Fasting Blood Sugar > 120 mg/dl (1 = True, 0 = False)', fontsize=14)
plt.ylabel('Frequency', fontsize=14)
plt.xticks(rotation=0, fontsize=12)
plt.legend(["No Disease", "Has Disease"], fontsize=12)
plt.show()

# Chest Pain Type analysis
print("\n" + "="*50)
print("Heart Disease by Chest Pain Type")
print("="*50)
plt.figure(figsize=(10,6))
pd.crosstab(df['cp'], df['target']).plot(kind='bar', color=['#11A5AA','#AA1190'])
plt.title('Heart Disease Frequency by Chest Pain Type', fontsize=16)
plt.xlabel('Chest Pain Type', fontsize=14)
plt.ylabel('Frequency', fontsize=14)
plt.xticks(rotation=0, fontsize=12)
plt.legend(["No Disease", "Has Disease"], fontsize=12)
plt.show()

# Correlation matrix
print("\n" + "="*50)
print("Feature Correlation Matrix")
print("="*50)
plt.figure(figsize=(12,10))
corr_matrix = df.corr()
sns.heatmap(corr_matrix, annot=True, cmap='coolwarm', center=0)
plt.title('Feature Correlation Matrix', fontsize=16)
plt.show()