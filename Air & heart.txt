import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import random as rd


from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.preprocessing import LabelEncoder, StandardScaler
from sklearn.metrics import accuracy_score, confusion_matrix

df = pd.read_csv("heart.csv")

ds = pd.read_csv("India Air Quality Data - India Air Quality Data - India Air Quality Data - India Air Quality Data.csv" ,low

df.isnull


df.info()

ds.dropna()


df.dropna()

ds1=ds.loc[111:999,['state','location','so2','rspm']]
ds2=ds.iloc[[1,3,5,2,4,22,41,54,67,7,8,9,50,10,11]]

ds_integration=pd.concat([ds1,ds2])

ds_integration

ds_integration.transpose()

ds.drop(columns="so2")

ds2.drop(1)

ds.melt()

ds_mearged=pd.concat([ds,df])

ds_mearged

df['ca'].unique()

df.ca.value_counts()

X=df[["age"]]
Y=df[["thal"]]

from sklearn import linear_model, metrics
from sklearn.model_selection import train_test_split
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=1)


reg=linear_model.LinearRegression()

model=reg.fit(X_train ,Y_train)
r_sq=reg.score(X_train ,Y_train)

print("Determination coefficient:",r_sq)

print("slope:",model.coef_)

y_pred=model.predict(X_test)
print('predicted response:',y_pred,sep='\n')

plt.scatter(X_train,Y_train,color='crimson')
plt.plot(X_train,reg.predict(X_train),color='black',linewidth=3)
plt.title("Age vs thal")
plt.xlabel("Age")
plt.ylabel("thal")
plt.show()